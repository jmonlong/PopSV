% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/quick.count.R
\name{quick.count}
\alias{quick.count}
\title{Counts reads across samples in a small number of bins}
\usage{
quick.count(files.df, bins.df, nb.cores = 1, col.files = NULL,
  nb.rand.bins = NULL, ...)
}
\arguments{
\item{files.df}{a data.frame with the information about the files to
use. Columns 'sample' and 'bam' are required.}

\item{bins.df}{a data.frame with the information about the bins. Columns 'chr', 'start'
and 'end' are required.}

\item{nb.cores}{number of cores to use. If higher than 1, \code{parallel}
package is used to parallelized the counting.}

\item{col.files}{if non-NULL, the name of the column in 'files.df' with the filenames where the information should be retrieved from.}

\item{nb.rand.bins}{if non-NULL, the number of bins to randomly choose. Default is NULL.}

\item{...}{extra paramaters for 'bin.bam' function}
}
\value{
a data.frame with the bin location and read counts for all samples.
}
\description{
This function retrieves bin count for all samples in the input file information
data.frame. It was designed to count reads in a small amount of bins (a subset
of what will be used for the full analysis). This counts can be used later to
compare a potentially large number samples and guide the selection of samples
to consider in the analysis.
}
\details{
If `col.files="bc.gc.gz"`, for example, the bin counts will be merged from the pre-computed files (the ones created by functions 'bin.bam' and 'correct.GC').
}
\author{
Jean Monlong
}
